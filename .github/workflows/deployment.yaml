on:
  push:
    branches:
      - main

jobs:
  deploy:
    # Use a self-hosted runner that is on the same network as your cluster.
    # If you instead have a publicly reachable API endpoint, you can keep ubuntu-latest.
    runs-on: [self-hosted, Windows, X64] # for example, if you are using a self-hosted runner on Windows
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: Oreire/kub-pod-svc.git # Ensure the correct repository is referenced
        ref: main # Specify the branch to check out
    
    - name: Install kubectl
      shell: bash
      run: |
            # Download kubectl
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/windows/amd64/kubectl.exe"
            
            # Place kubectl in a user-writable directory in PATH
            mkdir -p $HOME/bin
            mv kubectl.exe $HOME/bin/kubectl.exe
            
            # Add the directory to PATH
            echo 'export PATH=$HOME/bin:$PATH' >> $HOME/.bashrc
            source $HOME/.bashrc
            
            # Verify installation
            kubectl version --client

    - name: Set up kubeconfig
      shell: bash
      run: |
        # Ensure the .kube directory exists
        mkdir -p $HOME/.kube
        
        # Set the KUBECONFIG environment variable
        export KUBECONFIG=$HOME/.kube/config
        
        # Verify the kubeconfig file
        kubectl config view
        
        # Display cluster information to ensure connectivity
        kubectl cluster-info
        # Verify the kubeconfig file
          kubectl config view

    - name: Debug Kubeconfig
      shell: bash
      # Debug the kubeconfig file to ensure it is set up correctly
      run: |
        echo "Testing kubeconfig connection..."
        kubectl config current-context || echo "No current context found. Verify kubeconfig."
        kubectl cluster-info || echo "Failed to connect to the cluster."
        kubectl get nodes || echo "Failed to get nodes from the Kubernetes cluster"

    - name: Apply Kubernetes manifests
      shell: bash
      # Apply the Kubernetes manifests to deploy the pods and services
      run: |
        # Change directory to the folder containing your manifests
        cd kube
        # (Optional) View the current kubeconfig and cluster connection details
        kubectl config view
        kubectl get nodes  # to verify connectivity
        # Apply your manifests
        kubectl apply -f nginxpod.yaml
        kubectl apply -f prometheuspod.yaml 
        kubectl apply -f grafanapod.yaml

        kubectl apply -f nginxsvc.yaml
        kubectl apply -f prometheussvc.yaml